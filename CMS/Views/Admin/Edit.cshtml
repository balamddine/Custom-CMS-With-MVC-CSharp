@model CMS.Models.CMSUserEditModel

@{
    ViewBag.Title = "Edit Admin";

    <div class="content-wrapper fixerrormsg">
        <div class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1 class="m-0 text-dark">Edit user</h1>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="@Url.Content("~/Home")">Home</a></li>
                            <li class="breadcrumb-item"><a href="@Url.Content("~/Admin")">Users</a></li>
                            <li class="breadcrumb-item active">Edit users</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
        <section class="content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "Error updating Admin, Check your info!", new { @class = "text-danger" });

                @Html.HiddenFor(m => m.ID)
                @Html.HiddenFor(m => m.CreateDate)
                @Html.HiddenFor(m => m.isDeleted)
                @Html.HiddenFor(m => m.UserName)

                <div class="row">
                    <div class="col-12">
                        <div class="card card-primary">
                            <div class="card-header">
                                <h3 class="card-title">Content Details</h3>
                                <div class="card-tools">
                                    <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                                        <i class="fas fa-minus"></i>
                                    </button>
                                </div>
                            </div>

                            <div class="card-body">
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-6">

                                            @Html.LabelFor(m => m.UserName, new { @class = "" })
                                            <div class="form-input">
                                                <input type="text" value="@Model.UserName" disabled readonly class="form-control disabled" autocomplete="off" />
                                                @Html.ValidationMessageFor(u => u.UserName, null, new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-6">

                                            <b>@Html.LabelFor(m => m.AdminGroupRoles, new { @class = "" })
                                                <span style="font-size:12px;font-weight:400">
                                                    (Users with no groups will get full acccess)
                                                </span>
                                            </b>

                                            <div class="form-input">
                                                @{ 
                                                    string disabled = Model.ID == 1 ? "disabled" : "";
                                                }
                                                <select id="ddRoles" @disabled name="AdminGroupRoles" class="form-control select2" multiple data-placeholder="Select...">
                                                    @{
                                                        foreach (Data.Models.AdminGroupModel item in ViewBag.AdminGroupRoles)
                                                        {
                                                            string selected = Model.AdminGroupRoles.FirstOrDefault(x=>x.GroupId==item.Id)!=null ? "selected" : "";
                                                            <option value="@item.Id" @selected>@item.GroupName</option>
                                                        }
                                                    }
                                                </select>
                                                @Html.ValidationMessageFor(u => u.AdminGroupRoles, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-6">

                                            @Html.LabelFor(m => m.FirstName, new { @class = "" })
                                            <div class="form-input">
                                                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control " })
                                                @Html.ValidationMessageFor(u => u.FirstName, null, new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-6">

                                            @Html.LabelFor(m => m.LastName, new { @class = "" })
                                            <div class="form-input">
                                                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control " })
                                                @Html.ValidationMessageFor(u => u.LastName, null, new { @class = "text-danger" })
                                            </div>

                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-6">

                                            @Html.LabelFor(m => m.Email, new { @class = "" })
                                            <div class="form-input">
                                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control " })
                                                @Html.ValidationMessageFor(u => u.Email, null, new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-6">
                                            @Html.LabelFor(m => m.isDisabled)
                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(model => model.isDisabled, new { id = "chkisDisabled", @class = "custom-control-input ", autocomplete = "off" })
                                                <label for="chkisDisabled" class="custom-control-label">Yes</label>
                                            </div>
                                        </div>                                       
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">

                        <input class="btn btn-primary" type="submit" value="Save" />
                        @Html.ActionLink("Cancel", "Index", new { }, new { @class = "btn btn-secondary" })
                    </div>
                </div>
            }
            </section>
        
        </div>

}
@section Scripts {
    <script type="text/javascript">
        highlightmenu("#ausers");
    </script>
}

