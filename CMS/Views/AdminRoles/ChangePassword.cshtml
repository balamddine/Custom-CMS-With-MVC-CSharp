@model CMS.Models.CMSUserChangePass
@{
    ViewBag.Title = "Change Password Admin";
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark">Change password: @ViewBag.Username</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="@Url.Content("~/Home")">Home</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Content("~/Admin")">Users</a></li>
                        <li class="breadcrumb-item active">Change password</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="content">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        @using (Html.BeginForm("ChangePassword", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="card mb-3">
                                            <div class="card-header">
                                                <i class="fa"></i><b>Change  Password for @ViewBag.Email</b>
                                            </div>
                                            <div class="card-body">
                                                @Html.ValidationSummary("", new { @class = "text-danger" })

                                                @Html.HiddenFor(model => model.ID)

                                                <div class="row mb-2">
                                                    <div class="col-md-4">
                                                        <b>@Html.LabelFor(m => m.OldPass, new { @class = "form-control" })</b>
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.PasswordFor(model => model.OldPass, new { @class = "form-control ", autocomplete = "off" })
                                                        @Html.ValidationMessageFor(u => u.OldPass, null, new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="row mb-2">
                                                    <div class="col-md-4">
                                                        <b>@Html.LabelFor(m => m.Password, new { @class = "form-control" })</b>
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control " })
                                                        @Html.ValidationMessageFor(u => u.Password, null, new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="row mb-2">
                                                    <div class="col-md-4">
                                                        <b>@Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-control" })</b>
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control " })
                                                        @Html.ValidationMessageFor(u => u.ConfirmPassword, null, new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <input class="btn btn-primary" type="submit" value="Save" />
                            @Html.ActionLink("Cancel", "Index", new { }, new { @class = "btn btn-secondary" })
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        highlightmenu("#ausers");
    </script>
}